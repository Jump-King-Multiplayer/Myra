name: Build & Publish Release

on: [workflow_dispatch]

jobs:
  BuildAndPublish:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Extract Version
      shell: pwsh
      run: |
        $version = select-string -Path 'Directory.Build.Props' -Pattern '<VersionPrefix>(.*)<\/VersionPrefix>' -AllMatches | % { $_.Matches } | % { $_.Groups[1].Value }
        echo "VERSION=$version"
        echo "VERSION=$version" >> $Env:GITHUB_ENV
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: Pack Myra.MonoGame
      run: dotnet pack build\Myra.MonoGame.sln --configuration Release
    - name: Pack Myra.Stride
      run: dotnet pack build\Myra.Stride.sln --configuration Release
    - name: Pack Myra.PlatformAgnostic
      run: dotnet pack build\Myra.PlatformAgnostic.sln --configuration Release
    - name: Test
      run: dotnet test build\Myra.MonoGame.sln --verbosity normal
    - name: Build Binary Distribution
      shell: pwsh
      run: ./buildBinaryDistribution.ps1 ${{env.VERSION}}
    - name: Publish Myra.MonoGame to github
      run: dotnet nuget push src\Myra\bin\MonoGame\Release\Myra.*.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{secrets.GITHUB_TOKEN}} --skip-duplicate
    - name: Publish Myra.Stride to github
      run: dotnet nuget push src\Myra\bin\Stride\Release\Myra.Stride.*.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{secrets.GITHUB_TOKEN}} --skip-duplicate
    - name: Publish Myra.PlatformAgnostic to github
      run: dotnet nuget push src\Myra\bin\PlatformAgnostic\Release\Myra.PlatformAgnostic.*.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{secrets.GITHUB_TOKEN}} --skip-duplicate
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./Myra.${{ env.VERSION }}.zip
        asset_name: Myra.${{ env.VERSION }}.zip
        asset_content_type: application/zip